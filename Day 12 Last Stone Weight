class Solution {
    public int lastStoneWeight(int[] stones) {
        //Create a Max Heap. By default, PriorityQueue creates a Min Heap.
        PriorityQueue<Integer> maxHeap = new PriorityQueue<>((a, b) -> b - a);
        
        //Add the values to the Heap.
        for(int stone : stones) {
            maxHeap.add(stone);
        }
        
        while(maxHeap.size() > 1) {
            int stoneOne = maxHeap.remove();
            int stoneTwo = maxHeap.remove();
            
            if(stoneOne != stoneTwo) {
                maxHeap.add(stoneOne - stoneTwo);
            }
        }
        
        return maxHeap.isEmpty() ? 0 : maxHeap.remove();
    }
}
